<Window x:Class="EarlyPusher.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="clr-namespace:StFrLibs.Core.Behaviors;assembly=StFrCore"
        xmlns:c="clr-namespace:StFrLibs.Core.Converter;assembly=StFrCore"
        xmlns:ctrl="clr-namespace:EarlyPusher.Controls"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="SettingWindow"
        Width="525"
        Height="350">
	<Window.Resources>
		<c:BoolReverseConverter x:Key="brConv" />
		<c:BoolToVisibilityConverter x:Key="b2vConv"
		                             False="Collapsed"
		                             True="Visible" />
		<c:CombiningConverter x:Key="br2vConv"
		                      Converter1="{StaticResource brConv}"
		                      Converter2="{StaticResource b2vConv}" />
		<c:ColorToBrushConverter x:Key="c2bConv" />
		<c:IsNullConverter x:Key="nullConv" IsNull="False" />
	</Window.Resources>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding ClosingCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<DockPanel>
		<Menu DockPanel.Dock="Top">
			<MenuItem Command="{Binding SearchCommand}"
			          Header="検索"
			          IsEnabled="{Binding IsSettingMode}" />
			<MenuItem Command="{Binding AddPanelCommand}"
			          Header="パネル追加"
			          IsEnabled="{Binding IsSettingMode}" />
			<MenuItem Command="{Binding DelPanelCommand}"
			          Header="パネル削除"
			          IsEnabled="{Binding IsSettingMode}" />
			<MenuItem Command="{Binding AddSoundCommand}"
			          Header="サウンド追加"
			          IsEnabled="{Binding IsSettingMode}" />
			<MenuItem Command="{Binding DelSoundCommand}"
			          Header="サウンド削除"
			          IsEnabled="{Binding IsSettingMode}" />
			<MenuItem Command="{Binding StartCommand}"
			          Header="スタート(_S)"
			          IsEnabled="{Binding IsSettingMode,
			                              Converter={StaticResource brConv}}" />
			<MenuItem Command="{Binding ResetCommand}" Header="休みリセット(_R)" />
			<MenuItem Header="プレイウィンドウ">
				<MenuItem Command="{Binding WindowCommand}" Header="ウィンドウ表示/非表示(_W)" />
				<MenuItem Command="{Binding WindowMaxCommand}" Header="ウィンドウ最大化(_M)" />
			</MenuItem>
		</Menu>
		<Grid Width="150">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="4*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<ListBox Grid.Row="0" ItemsSource="{Binding Devices}" />
			<GridSplitter Grid.Row="1"
			              Height="5"
			              HorizontalAlignment="Stretch"
			              VerticalAlignment="Center"
			              ResizeDirection="Rows"
			              ShowsPreview="True" />
			<ListBox Grid.Row="2" ItemsSource="{Binding Videos}">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<ContentControl Content="{Binding FileName}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="MouseDoubleClick">
									<i:InvokeCommandAction Command="{Binding DataContext.PlayVideoCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" CommandParameter="{Binding FilePath}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</ContentControl>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

			<ToggleButton Grid.Row="3"
			              Content="再生/一時停止(_P)"
			              IsChecked="{Binding IsVideoPlaying}"
			              IsEnabled="{Binding VideoSource,
			                                  Converter={StaticResource nullConv}}" />
		</Grid>
		<WrapPanel DockPanel.Dock="Top" Orientation="Horizontal">
			<TextBlock Text=" UpdateTime : " />
			<TextBlock Width="60" Text="{Binding UpdateTime}" />
			<ToggleButton Content="設定モード(_C)" IsChecked="{Binding IsSettingMode}" />
			<TextBlock Text="チーム数 : " />
			<xctk:IntegerUpDown Width="60"
			                    Minimum="1"
			                    Value="{Binding WrapCount}" />
		</WrapPanel>
		<Grid Margin="5" DockPanel.Dock="Top">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<TextBlock Grid.Row="0"
			           Grid.Column="0"
			           Text="ビデオフォルダ" />
			<TextBox Grid.Row="0"
			         Grid.Column="1"
			         IsReadOnly="True"
			         Text="{Binding VideoDir}" />
			<Button Grid.Row="0"
			        Grid.Column="2"
			        Grid.ColumnSpan="2"
			        Command="{Binding SelectVideoDirCommand}"
			        Content="参照" />

			<TextBlock Grid.Row="1"
			           Grid.Column="0"
			           Text="解答音" />
			<TextBox Grid.Row="1"
			         Grid.Column="1"
			         IsReadOnly="True"
			         Text="{Binding AnserSound.Path}" />
			<Button Grid.Row="1"
			        Grid.Column="2"
			        Command="{Binding SelectAnserSoundCommand}"
			        Content="参照" />
			<Button Grid.Row="1"
			        Grid.Column="3"
			        Command="{Binding AnserSound.PlayCommand}"
			        Content="再生" />
		</Grid>
		<ListView Margin="5"
		          DockPanel.Dock="Top"
		          ItemsSource="{Binding Sounds}"
		          SelectedItem="{Binding SelectedSound}">
			<ListView.View>
				<GridView AllowsColumnReorder="False">
					<GridView.ColumnHeaderContainerStyle>
						<Style>
							<Setter Property="UIElement.Visibility" Value="Collapsed" />
						</Style>
					</GridView.ColumnHeaderContainerStyle>
					<GridViewColumn Width="Auto">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Button Command="{Binding PlayCommand}" Content="再生" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="Auto">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<ToggleButton Command="{Binding PauseCommand}" Content="一時停止" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="Auto">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<Button Command="{Binding StopCommand}" Content="停止" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="Auto" DisplayMemberBinding="{Binding Path}" />
				</GridView>
			</ListView.View>
		</ListView>
		<!--
			<ScrollViewer Height="100" DockPanel.Dock="Bottom">
			<TextBox Text="{Binding Log}" x:Name="log" AcceptsReturn="True" IsReadOnly="True" />
			</ScrollViewer>
		-->
		<ListView ItemsSource="{Binding Items}"
		          SelectedItem="{Binding SelectedPanel}"
		          SelectionMode="Single">
			<ListView.View>
				<GridView>
					<GridViewColumn DisplayMemberBinding="{Binding Rank}" Header="順位" />
					<GridViewColumn DisplayMemberBinding="{Binding Data.Key}" Header="キー" />
					<GridViewColumn Header="解答可能">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<CheckBox IsChecked="{Binding CanAnswer}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Header="名前">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<TextBox MinWidth="100" Text="{Binding Data.Name}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn Width="80" Header="色">
						<GridViewColumn.CellTemplate>
							<DataTemplate>
								<xctk:ColorPicker SelectedColor="{Binding Data.PanelColor}" />
							</DataTemplate>
						</GridViewColumn.CellTemplate>
					</GridViewColumn>
					<GridViewColumn DisplayMemberBinding="{Binding Data.DeviceGuid}" Header="デバイス" />
				</GridView>
			</ListView.View>
		</ListView>
	</DockPanel>
</Window>
