<Window x:Class="EarlyPusher.Views.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:b="clr-namespace:StFrLibs.Core.Behaviors;assembly=StFrCore"
        xmlns:ba="clr-namespace:EarlyPusher.Basis"
        xmlns:c="clr-namespace:StFrLibs.Core.Converter;assembly=StFrCore"
        xmlns:ctrl="clr-namespace:EarlyPusher.Controls"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="SettingWindow"
        Width="800"
        Height="550">
	<Window.Resources>
		<c:BoolReverseConverter x:Key="brConv" />
		<c:BoolToVisibilityConverter x:Key="b2vConv"
		                             False="Collapsed"
		                             True="Visible" />
		<c:CombiningConverter x:Key="br2vConv"
		                      Converter1="{StaticResource brConv}"
		                      Converter2="{StaticResource b2vConv}" />
		<c:ColorToBrushConverter x:Key="c2bConv" />
		<c:IsNullConverter x:Key="nullConv" IsNull="False" />
		<ObjectDataProvider x:Key="playModeEnum"
		                    MethodName="GetValues"
		                    ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="ba:PlayMode" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
	</Window.Resources>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding ClosingCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Menu Grid.Row="0" DockPanel.Dock="Top">
			<MenuItem Header="プレイウィンドウ">
				<MenuItem Command="{Binding WindowCommand}" Header="ウィンドウ表示/非表示(_W)" />
				<MenuItem Command="{Binding WindowMaxCommand}" Header="ウィンドウ最大化(_M)" />
			</MenuItem>
		</Menu>

		<TabControl Grid.Row="1">
			<TabItem Header="メインタブ">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="2*" />
					</Grid.ColumnDefinitions>
					<Grid Grid.Column="0">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<ListBox Grid.Row="0"
						         Grid.ColumnSpan="2"
						         ItemsSource="{Binding Medias}"
						         SelectedItem="{Binding SelectedMedia}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<ContentControl Content="{Binding FileName}">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="MouseDoubleClick">
												<i:InvokeCommandAction Command="{Binding PlayOrPauseCommand}" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</ContentControl>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>

						<ToggleButton Grid.Row="1"
						              Grid.Column="0"
						              Command="{Binding SelectedMedia.PlayOrPauseCommand}"
						              Content="再生/一時停止(_P)"
						              IsChecked="{Binding SelectedMedia.IsPlaying,
						                                  Mode=OneWay}"
						              IsEnabled="{Binding SelectedMedia,
						                                  Converter={StaticResource nullConv}}" />
						<Button Grid.Row="1"
						        Grid.Column="1"
						        Command="{Binding SelectedMedia.StopCommand}"
						        Content="停止"
						        IsEnabled="{Binding SelectedMedia,
						                            Converter={StaticResource nullConv}}" />
					</Grid>

					<GridSplitter Grid.Column="1"
					              Width="3"
					              ResizeBehavior="PreviousAndNext" />

					<DockPanel Grid.Column="2">
						<Menu DockPanel.Dock="Top">
							<MenuItem Command="{Binding StartCommand}"
							          Header="スタート(_S)"
							          IsEnabled="{Binding IsSettingMode,
							                              Converter={StaticResource brConv}}" />
							<MenuItem Command="{Binding ResetCommand}" Header="休みリセット(_R)" />
						</Menu>
						<CheckBox Content="設定モード(_C)"
						          DockPanel.Dock="Top"
						          IsChecked="{Binding IsSettingMode}" />
						<Grid Margin="5"
						      DockPanel.Dock="Top"
						      IsEnabled="{Binding IsSettingMode}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<TextBlock Grid.Row="0"
							           Grid.Column="0"
							           Text="モード" />
							<ComboBox Grid.Row="0"
							          Grid.Column="1"
							          ItemsSource="{Binding Source={StaticResource playModeEnum}}"
							          SelectedItem="{Binding Mode}" />

							<TextBlock Grid.Row="1"
							           Grid.Column="0"
							           Text="ビデオ/BGM フォルダ" />
							<TextBox Grid.Row="1"
							         Grid.Column="1"
							         IsReadOnly="True"
							         Text="{Binding VideoDir}" />
							<Button Grid.Row="1"
							        Grid.Column="2"
							        Grid.ColumnSpan="2"
							        Command="{Binding SelectVideoDirCommand}"
							        Content="参照" />

							<TextBlock Grid.Row="2"
							           Grid.Column="0"
							           Text="解答音" />
							<TextBox Grid.Row="2"
							         Grid.Column="1"
							         IsReadOnly="True"
							         Text="{Binding AnswerSound.FilePath}" />
							<Button Grid.Row="2"
							        Grid.Column="2"
							        Command="{Binding SelectAnswerSoundCommand}"
							        Content="参照" />
							<Button Grid.Row="2"
							        Grid.Column="3"
							        Command="{Binding AnswerSound.PlayCommand}"
							        Content="再生" />
						</Grid>
						<DataGrid AutoGenerateColumns="False"
						          CanUserAddRows="False"
						          CanUserDeleteRows="False"
						          ItemsSource="{Binding Members}"
						          RowHeaderWidth="0"
						          SelectedItem="{Binding SelectedMember}"
						          SelectionMode="Single">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem Header="メンバー追加"
									          IsEnabled="{Binding IsSettingMode}"
									          ItemsSource="{Binding SettingOnlyVM.Teams}">
										<MenuItem.ItemContainerStyle>
											<Style TargetType="MenuItem">
												<Setter Property="Header" Value="{Binding Model.TeamName}" />
												<Setter Property="Command" Value="{Binding DataContext.AddMemberCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" />
												<Setter Property="CommandParameter" Value="{Binding Model}" />
											</Style>
										</MenuItem.ItemContainerStyle>
									</MenuItem>
									<MenuItem Command="{Binding DelMemberCommand}"
									          Header="メンバー削除"
									          IsEnabled="{Binding IsSettingMode}" />
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Binding="{Binding Rank}"
								                    Header="順位"
								                    IsReadOnly="True" />
								<DataGridTemplateColumn Header="解答権" IsReadOnly="True">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<CheckBox HorizontalAlignment="Center"
											          VerticalAlignment="Center"
											          IsChecked="{Binding CanAnswer,
											                              UpdateSourceTrigger=PropertyChanged}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<DataGridTextColumn MinWidth="100"
								                    Binding="{Binding Model.Name}"
								                    Header="名前" />
								<DataGridTextColumn Binding="{Binding Parent.Model.TeamName}"
								                    Header="チーム名"
								                    IsReadOnly="True" />
								<DataGridTextColumn Header="キー" IsReadOnly="True">
									<DataGridTextColumn.Binding>
										<MultiBinding StringFormat="{}{0} : {1}">
											<Binding Path="Model.Key" />
											<Binding Path="Model.DeviceGuid" />
										</MultiBinding>
									</DataGridTextColumn.Binding>
								</DataGridTextColumn>
							</DataGrid.Columns>
						</DataGrid>
					</DockPanel>
				</Grid>
			</TabItem>
			<TabItem Header="設定専用" IsEnabled="{Binding IsSettingMode}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="3*" />
					</Grid.ColumnDefinitions>

					<GridSplitter Grid.RowSpan="2"
					              Grid.Column="1"
					              Width="3"
					              ResizeBehavior="PreviousAndNext" />

					<Menu Grid.Row="0" Grid.Column="0">
						<MenuItem Command="{Binding SearchCommand}" Header="検索" />
						<TextBlock Text="{Binding UpdateTime, StringFormat=更新間隔 : {0}}" />
					</Menu>
					<Menu Grid.Row="0" Grid.Column="2">
						<MenuItem Command="{Binding AddTeamCommand}" Header="追加" />
						<MenuItem Command="{Binding DelTeamCommand}" Header="削除" />
					</Menu>

					<ListBox Grid.Row="1"
					         Grid.Column="0"
					         ItemsSource="{Binding Devices}" />

					<ListView Grid.Row="1"
					          Grid.Column="2"
					          ItemsSource="{Binding Teams}"
					          SelectedItem="{Binding SelectedTeam}"
					          SelectionMode="Single">
						<ListView.View>
							<GridView>
								<GridViewColumn Header="チーム名">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBox MinWidth="100" Text="{Binding Model.TeamName}" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn Width="80" Header="チームカラー">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<xctk:ColorPicker SelectedColor="{Binding Model.TeamColor}" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView>
						</ListView.View>
					</ListView>

				</Grid>
			</TabItem>
		</TabControl>

	</Grid>
</Window>
